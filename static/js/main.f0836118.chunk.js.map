{"version":3,"sources":["components/ChatBlock/ChatBlock.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/ChatBlock/ChatBlock.module.css","App.module.css"],"names":["ChatBlock","props","className","s","container","photoName","photo","src","img","alt","name","message","App","endRef","useRef","useState","ws","setWs","setMessage","users","setUsers","onmessage","messageEvent","newData","JSON","parse","data","current","scrollIntoView","behavior","useEffect","localWs","WebSocket","href","chatBlock","map","u","i","userName","ref","messageBlock","value","placeholder","onChange","e","currentTarget","buttonsBlock","onClick","send","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPASaA,EAAY,SAACC,GACtB,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UAEI,sBAAKF,UAAWC,IAAEE,UAAlB,UACI,8BACI,qBAAKH,UAAWC,IAAEG,MAAOC,IAAKN,EAAMO,IAAKC,IAAK,aAGlD,qBAAKP,UAAWC,IAAEO,KAAlB,SACKT,EAAMS,UAIf,qBAAKR,UAAWC,IAAEQ,QAAlB,SACKV,EAAMU,cCuDRC,MApEf,WACI,IAAMC,EAASC,iBAA8B,MADlC,EAGSC,qBAHT,mBAGJC,EAHI,KAGAC,EAHA,OAImBF,mBAAS,IAJ5B,mBAIJJ,EAJI,KAIKO,EAJL,OAKeH,mBAAwB,IALvC,mBAKJI,EALI,KAKGC,EALH,KAgCX,OAzBIJ,IACAA,EAAGK,UAAY,SAACC,GAAkB,IAAD,EACvBC,EAAUC,KAAKC,MAAMH,EAAaI,MACxCN,EAAS,GAAD,mBAAKD,GAAL,YAAeI,KAEvB,UAAAV,EAAOc,eAAP,SAAgBC,eAAe,CAACC,SAAU,aAIlDC,qBAAU,WACN,IAAMC,EAAU,IAAIC,UAAU,gEAC9Bf,EAAMc,KACP,IAcC,sBAAK7B,UAAWC,IAAEC,UAAlB,UACI,gPAC4C,yDAD5C,uBAC4D,iFAD5D,gIACoG,mBAChG6B,KAAM,wCAD0F,6CAIpG,sBAAK/B,UAAWC,IAAE+B,UAAlB,UACKf,EAAMgB,KAAI,SAACC,EAAGC,GAAJ,OACP,cAAC,EAAD,CAEI7B,IAAK4B,EAAE9B,OAAS,8CAChBI,KAAM0B,EAAEE,SACR3B,QAASyB,EAAEzB,SAHN0B,MAKb,qBAAKE,IAAK1B,OAGd,0BACIX,UAAWC,IAAEqC,aACbC,MAAO9B,EACP+B,YAAa,cACbC,SAjCa,SAACC,GACtB1B,EAAW0B,EAAEC,cAAcJ,UAmCvB,qBAAKvC,UAAWC,IAAE2C,aAAlB,SACI,wBACIC,QAlCM,WACd/B,IACAA,EAAGgC,KAAKrC,GACRO,EAAW,MA8BP,wBCvDD+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,QAAU,6B,kBCA9KD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,UAAY,uBAAuB,aAAe,0BAA0B,aAAe,6B","file":"static/js/main.f0836118.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './ChatBlock.module.css'\r\n\r\ntype PropsType = {\r\n    img: string\r\n    name: string\r\n    message: string\r\n}\r\n\r\nexport const ChatBlock = (props: PropsType) => {\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            <div className={s.photoName}>\r\n                <div>\r\n                    <img className={s.photo} src={props.img} alt={'Avatar'}/>\r\n                </div>\r\n\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useRef, useState} from 'react';\nimport s from './App.module.css';\nimport {ChatBlock} from './components/ChatBlock/ChatBlock';\n\ntype MessageType = {\n    userId: number\n    userName: string\n    photo: string\n    message: string\n}\n\nfunction App() {\n    const endRef = useRef<null | HTMLDivElement>(null)\n\n    const [ws, setWs] = useState<WebSocket>()\n    const [message, setMessage] = useState('')\n    const [users, setUsers] = useState<MessageType[]>([])\n\n    if (ws) {\n        ws.onmessage = (messageEvent) => {\n            const newData = JSON.parse(messageEvent.data)\n            setUsers([...users, ...newData])\n\n            endRef.current?.scrollIntoView({behavior: 'smooth'})\n        }\n    }\n\n    useEffect(() => {\n        const localWs = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n        setWs(localWs)\n    }, [])\n\n    const onTextareaChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        setMessage(e.currentTarget.value)\n    }\n\n    const onButtonClick = () => {\n        if (ws) {\n            ws.send(message)\n            setMessage('')\n        }\n    }\n\n    return (\n        <div className={s.container}>\n            <div>\n                Чтобы пользоваться чатом, нужно зайти в <b>СВОЮ</b> или <b>Тестовую</b> учетную запись на сайте <a\n                href={'https://social-network.samuraijs.com/'}>social-network.samuraijs.com</a>\n            </div>\n\n            <div className={s.chatBlock}>\n                {users.map((u, i) =>\n                    <ChatBlock\n                        key={i}\n                        img={u.photo || 'https://www.qofa.ru/static/img/noavatar.png'}\n                        name={u.userName}\n                        message={u.message}\n                    />)}\n                <div ref={endRef}/>\n            </div>\n\n            <textarea\n                className={s.messageBlock}\n                value={message}\n                placeholder={'New message'}\n                onChange={onTextareaChange}\n            />\n\n            <div className={s.buttonsBlock}>\n                <button\n                    onClick={onButtonClick}\n                >\n                    Send\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChatBlock_container__3FIbV\",\"photoName\":\"ChatBlock_photoName__3j8IA\",\"photo\":\"ChatBlock_photo__3K2SO\",\"name\":\"ChatBlock_name__1NpMd\",\"message\":\"ChatBlock_message__1nz_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1hHaz\",\"chatBlock\":\"App_chatBlock__2wVOL\",\"messageBlock\":\"App_messageBlock__1Fn7r\",\"buttonsBlock\":\"App_buttonsBlock__3h7Hl\"};"],"sourceRoot":""}